apiVersion: kargo.akuity.io/v1alpha1
kind: Project
metadata:
  annotations:
    argocd.argoproj.io/sync-wave: "-1"
  name: kargo-proj
---
apiVersion: argoproj.io/v1alpha1
kind: AnalysisTemplate
metadata:
  name: kargo-http-analysis
  namespace: kargo-proj
spec:
  metrics:
    - name: webmetric
      successCondition: result == true
      provider:
        web:
          url: "https://example.com"
          timeoutSeconds: 20 # defaults to 10 seconds
          jsonPath: "{$.data.ok}"
---
apiVersion: argoproj.io/v1alpha1
kind: AnalysisTemplate
metadata:
  name: kargo-job-analysis
  namespace: kargo-proj
spec:
  metrics:
    - name: test
      provider:
        job:
          spec:
            backoffLimit: 1
            template:
              spec:
                containers:
                  - name: test
                    image: busybox:latest
                    command:
                      ["sh", "-c", 'echo "Hello, Kubernetes!" && sleep 30']
                restartPolicy: Never
---
apiVersion: kargo.akuity.io/v1alpha1
kind: Warehouse
metadata:
  name: nginx
  namespace: kargo-proj
spec:
  subscriptions:
    - image:
        repoURL: public.ecr.aws/nginx/nginx
        semverConstraint: ^1.26.0
        discoveryLimit: 1
---
apiVersion: kargo.akuity.io/v1alpha1
kind: Stage
metadata:
  name: test
  namespace: kargo-proj
spec:
  requestedFreight:
    - origin:
        kind: Warehouse
        name: nginx
      sources:
        direct: true
  promotionTemplate:
    spec:
      steps:
      - uses: argocd-update
        config:
          apps:
            - name: test-app
              namespace: argocd
              sources:
              - repoURL: https://github.com/akuity/akp-demo.git
                kustomize:
                  images:
                  - repoURL: public.ecr.aws/nginx/nginx
                    tag: ${{ imageFrom("public.ecr.aws/nginx/nginx").Tag }}
  verification:
    analysisTemplates:
      - name: kargo-http-analysis
---
apiVersion: kargo.akuity.io/v1alpha1
kind: Stage
metadata:
  name: uat
  namespace: kargo-proj
spec:
  requestedFreight:
    - origin:
        kind: Warehouse
        name: nginx
      sources:
        stages:
          - test
  promotionTemplate:
    spec:
      steps:
      - uses: argocd-update
        config:
          apps:
            - name: uat-app
              namespace: argocd
              sources:
              - repoURL: https://github.com/akuity/akp-demo.git
                kustomize:
                  images:
                  - repoURL: public.ecr.aws/nginx/nginx
                    tag: ${{ imageFrom("public.ecr.aws/nginx/nginx").Tag }}
  verification:
    analysisTemplates:
      - name: kargo-http-analysis
---
apiVersion: kargo.akuity.io/v1alpha1
kind: Stage
metadata:
  name: prod
  namespace: kargo-proj
spec:
  shard: demo # expecting a self hosted cluster named "demo" to show analysis job runs
  requestedFreight:
    - origin:
        kind: Warehouse
        name: nginx
      sources:
        stages:
          - uat
  promotionTemplate:
    spec:
      steps:
      - uses: argocd-update
        config:
          apps:
            - name: prod-app
              namespace: argocd
              sources:
              - repoURL: https://github.com/akuity/akp-demo.git
                kustomize:
                  images:
                  - repoURL: public.ecr.aws/nginx/nginx
                    tag: ${{ imageFrom("public.ecr.aws/nginx/nginx").Tag }}
  verification:
    analysisTemplates:
      - name: kargo-job-analysis
    analysisRunMetadata:
      annotations:
        foo: bar # annotations defined here will be copied to the Job object
      labels:
        foo: bar # labels defined here will be copied to the Job object
